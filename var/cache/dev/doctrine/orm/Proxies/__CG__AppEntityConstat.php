<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Constat extends \App\Entity\Constat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'dateaccident', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'lieu', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'dateconstat', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'imageaccident', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'vehicules', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'latitude', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'longitude', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'user'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'dateaccident', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'lieu', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'dateconstat', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'imageaccident', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'vehicules', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'latitude', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'longitude', '' . "\0" . 'App\\Entity\\Constat' . "\0" . 'user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Constat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateaccident(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateaccident', []);

        return parent::getDateaccident();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateaccident(?\DateTime $dateaccident): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateaccident', [$dateaccident]);

        return parent::setDateaccident($dateaccident);
    }

    /**
     * {@inheritDoc}
     */
    public function getLieu(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLieu', []);

        return parent::getLieu();
    }

    /**
     * {@inheritDoc}
     */
    public function setLieu(?string $lieu): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLieu', [$lieu]);

        return parent::setLieu($lieu);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateconstat(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateconstat', []);

        return parent::getDateconstat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateconstat(?\DateTime $dateconstat): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateconstat', [$dateconstat]);

        return parent::setDateconstat($dateconstat);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageaccident(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageaccident', []);

        return parent::getImageaccident();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageaccident(?string $imageaccident): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageaccident', [$imageaccident]);

        return parent::setImageaccident($imageaccident);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(?string $etat): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$image]);

        return parent::setImageFile($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicules(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicules', []);

        return parent::getVehicules();
    }

    /**
     * {@inheritDoc}
     */
    public function addVehicule(\App\Entity\Vehicule $vehicule): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVehicule', [$vehicule]);

        return parent::addVehicule($vehicule);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVehicule(\App\Entity\Vehicule $vehicule): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVehicule', [$vehicule]);

        return parent::removeVehicule($vehicule);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', []);

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude(?float $latitude): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', [$latitude]);

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude(?float $longitude): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Constat
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

}
